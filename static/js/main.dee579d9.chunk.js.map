{"version":3,"sources":["components/SearchBox.js","components/Scroll.js","components/Card.js","components/CardList.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchField","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","Card","name","email","id","alt","src","CardList","robots","cardsArray","map","user","i","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filtredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAeeA,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKC,UAAY,MAAjB,SACI,uBACIA,UAAY,mCACZC,KAAO,SACPC,YAAc,gBACdC,SAAYJ,OCCbK,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCSJC,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GACxB,OACI,sBAAKd,UAAY,sDAAjB,UACI,qBAAKe,IAAM,QAAQC,IAAG,+BAA4BF,EAA5B,cACtB,gCACI,6BAAKF,IACL,4BAAIC,WCOLI,EAZE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAaD,EAAOE,KAAI,SAACC,EAAKC,GAChC,OAAO,cAAC,EAAD,CAAgBR,GAAMI,EAAOI,GAAGR,GAAIF,KAAQM,EAAOI,GAAGV,KAAMC,MAASK,EAAOI,GAAGT,OAAlES,MAExB,OACI,8BACKH,KCcEI,E,kDApBX,WAAYlB,GAAO,IAAD,8BACd,cAAMA,IACDmB,MAAQ,CACTC,UAAU,GAHA,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,wCAEAG,KAAKvB,MAAMK,a,GAhBHoB,aCkDZC,G,wDA3CX,aAAc,IAAD,8BACT,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAE/B,YAAamC,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACTN,OAAQ,GACRpB,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfsC,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKX,SAAS,CAAEX,OAAQsB,S,oBAQ9C,WACI,MAAgCZ,KAAKJ,MAA7BN,EAAR,EAAQA,OAAQpB,EAAhB,EAAgBA,YACV2C,EAAgBvB,EAAOwB,QAAO,SAAAC,GAChC,OAAOA,EAAM/B,KAAKgC,cAAcC,SAAS/C,EAAY8C,kBAGzD,OAAI1B,EAAO4B,OAIH,sBAAK9C,UAAY,KAAjB,UACI,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWD,aAAgB6B,KAAKI,iBAChC,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUd,OAAUuB,WAR7B,gD,GA3BDX,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dee579d9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n    return(\r\n        <div className = 'pa2'>\r\n            <input \r\n                className = 'pa3 ba b--green bg-lightest-blue'\r\n                type = 'search' \r\n                placeholder = 'search robots' \r\n                onChange = {searchChange}>\r\n                </input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll","import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n    return(\r\n        <div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt = 'robot' src = {`https://robohash.org/${id}?200x200`}></img>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({ robots }) => {\r\n    const cardsArray = robots.map((user,i) => {\r\n        return <Card key = {i} id = {robots[i].id} name = {robots[i].name} email = {robots[i].email} />\r\n    })\r\n    return(\r\n        <div>\r\n            {cardsArray}\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default CardList","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Whoops</h1>\r\n        }else{\r\n            return this.props.children\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry","import React, { Component } from 'react';\r\nimport SearchBox from '../components/SearchBox.js';\r\nimport Scroll from '../components/Scroll.js';\r\nimport CardList from '../components/CardList.js';\r\nimport ErrorBoundry from '../components/ErrorBoundry.js';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response =>response.json())\r\n            .then(users =>this.setState({ robots: users}))\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchField: event.target.value })\r\n        \r\n    }\r\n\r\n    render(){\r\n        const { robots, searchField } = this.state;\r\n        const filtredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        })\r\n        \r\n        if(!robots.length){\r\n            return <h1>Loading...</h1>\r\n        }else{\r\n            return (\r\n                <div className = 'tc'>\r\n                    <h1 className = 'f1'>RoboFriends</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <CardList robots = {filtredRobots}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n        } \r\n    } \r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}